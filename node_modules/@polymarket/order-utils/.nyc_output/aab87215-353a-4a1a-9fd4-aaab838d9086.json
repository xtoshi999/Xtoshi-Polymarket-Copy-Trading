{"/Users/poly-rodr/projects/clob-order-utils/src/exchange.order.builder.ts":{"path":"/Users/poly-rodr/projects/clob-order-utils/src/exchange.order.builder.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":38}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":32}},"3":{"start":{"line":5,"column":23},"end":{"line":5,"column":56}},"4":{"start":{"line":6,"column":31},"end":{"line":6,"column":64}},"5":{"start":{"line":7,"column":32},"end":{"line":7,"column":72}},"6":{"start":{"line":8,"column":16},"end":{"line":8,"column":34}},"7":{"start":{"line":11,"column":8},"end":{"line":11,"column":47}},"8":{"start":{"line":12,"column":8},"end":{"line":12,"column":31}},"9":{"start":{"line":13,"column":8},"end":{"line":13,"column":29}},"10":{"start":{"line":14,"column":8},"end":{"line":14,"column":41}},"11":{"start":{"line":22,"column":8},"end":{"line":27,"column":11}},"12":{"start":{"line":23,"column":26},"end":{"line":23,"column":58}},"13":{"start":{"line":24,"column":35},"end":{"line":24,"column":66}},"14":{"start":{"line":25,"column":35},"end":{"line":25,"column":81}},"15":{"start":{"line":26,"column":12},"end":{"line":26,"column":90}},"16":{"start":{"line":35,"column":8},"end":{"line":64,"column":11}},"17":{"start":{"line":36,"column":12},"end":{"line":38,"column":13}},"18":{"start":{"line":37,"column":16},"end":{"line":37,"column":31}},"19":{"start":{"line":39,"column":34},"end":{"line":39,"column":64}},"20":{"start":{"line":40,"column":12},"end":{"line":42,"column":13}},"21":{"start":{"line":41,"column":16},"end":{"line":41,"column":57}},"22":{"start":{"line":43,"column":12},"end":{"line":45,"column":13}},"23":{"start":{"line":44,"column":16},"end":{"line":44,"column":33}},"24":{"start":{"line":46,"column":12},"end":{"line":49,"column":13}},"25":{"start":{"line":48,"column":16},"end":{"line":48,"column":74}},"26":{"start":{"line":50,"column":12},"end":{"line":63,"column":14}},"27":{"start":{"line":72,"column":8},"end":{"line":98,"column":10}},"28":{"start":{"line":106,"column":8},"end":{"line":106,"column":44}},"29":{"start":{"line":107,"column":8},"end":{"line":107,"column":96}},"30":{"start":{"line":115,"column":24},"end":{"line":115,"column":38}},"31":{"start":{"line":116,"column":8},"end":{"line":117,"column":119}},"32":{"start":{"line":120,"column":0},"end":{"line":120,"column":52}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":92},"end":{"line":15,"column":5}},"line":10},"1":{"name":"(anonymous_1)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":32},"end":{"line":28,"column":5}},"line":21},"2":{"name":"(anonymous_2)","decl":{"start":{"line":22,"column":55},"end":{"line":22,"column":56}},"loc":{"start":{"line":22,"column":68},"end":{"line":27,"column":9}},"line":22},"3":{"name":"(anonymous_3)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":129},"end":{"line":65,"column":5}},"line":34},"4":{"name":"(anonymous_4)","decl":{"start":{"line":35,"column":55},"end":{"line":35,"column":56}},"loc":{"start":{"line":35,"column":68},"end":{"line":64,"column":9}},"line":35},"5":{"name":"(anonymous_5)","decl":{"start":{"line":71,"column":4},"end":{"line":71,"column":5}},"loc":{"start":{"line":71,"column":31},"end":{"line":99,"column":5}},"line":71},"6":{"name":"(anonymous_6)","decl":{"start":{"line":105,"column":4},"end":{"line":105,"column":5}},"loc":{"start":{"line":105,"column":35},"end":{"line":108,"column":5}},"line":105},"7":{"name":"(anonymous_7)","decl":{"start":{"line":114,"column":4},"end":{"line":114,"column":5}},"loc":{"start":{"line":114,"column":35},"end":{"line":118,"column":5}},"line":114}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":50},"end":{"line":10,"column":90}},"type":"default-arg","locations":[{"start":{"line":10,"column":65},"end":{"line":10,"column":90}}],"line":10},"1":{"loc":{"start":{"line":36,"column":12},"end":{"line":38,"column":13}},"type":"if","locations":[{"start":{"line":36,"column":12},"end":{"line":38,"column":13}},{"start":{"line":36,"column":12},"end":{"line":38,"column":13}}],"line":36},"2":{"loc":{"start":{"line":36,"column":16},"end":{"line":36,"column":55}},"type":"binary-expr","locations":[{"start":{"line":36,"column":16},"end":{"line":36,"column":44}},{"start":{"line":36,"column":48},"end":{"line":36,"column":55}}],"line":36},"3":{"loc":{"start":{"line":40,"column":12},"end":{"line":42,"column":13}},"type":"if","locations":[{"start":{"line":40,"column":12},"end":{"line":42,"column":13}},{"start":{"line":40,"column":12},"end":{"line":42,"column":13}}],"line":40},"4":{"loc":{"start":{"line":43,"column":12},"end":{"line":45,"column":13}},"type":"if","locations":[{"start":{"line":43,"column":12},"end":{"line":45,"column":13}},{"start":{"line":43,"column":12},"end":{"line":45,"column":13}}],"line":43},"5":{"loc":{"start":{"line":43,"column":16},"end":{"line":43,"column":63}},"type":"binary-expr","locations":[{"start":{"line":43,"column":16},"end":{"line":43,"column":48}},{"start":{"line":43,"column":52},"end":{"line":43,"column":63}}],"line":43},"6":{"loc":{"start":{"line":46,"column":12},"end":{"line":49,"column":13}},"type":"if","locations":[{"start":{"line":46,"column":12},"end":{"line":49,"column":13}},{"start":{"line":46,"column":12},"end":{"line":49,"column":13}}],"line":46},"7":{"loc":{"start":{"line":46,"column":16},"end":{"line":46,"column":69}},"type":"binary-expr","locations":[{"start":{"line":46,"column":16},"end":{"line":46,"column":51}},{"start":{"line":46,"column":55},"end":{"line":46,"column":69}}],"line":46}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":20,"8":20,"9":20,"10":20,"11":4,"12":4,"13":4,"14":4,"15":4,"16":20,"17":20,"18":20,"19":20,"20":20,"21":0,"22":20,"23":20,"24":20,"25":20,"26":20,"27":16,"28":8,"29":8,"30":4,"31":4,"32":1},"f":{"0":20,"1":4,"2":4,"3":20,"4":20,"5":16,"6":8,"7":4},"b":{"0":[0],"1":[20,0],"2":[20,0],"3":[0,20],"4":[20,0],"5":[20,0],"6":[20,0],"7":[20,0]},"inputSourceMap":{"version":3,"file":"/Users/poly-rodr/projects/clob-order-utils/src/exchange.order.builder.ts","sources":["/Users/poly-rodr/projects/clob-order-utils/src/exchange.order.builder.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n    SignTypedDataVersion,\n    TypedDataUtils,\n    TypedMessage,\n} from '@metamask/eth-sig-util';\nimport { JsonRpcSigner } from '@ethersproject/providers';\nimport { Wallet } from '@ethersproject/wallet';\nimport {\n    EIP712_DOMAIN,\n    ORDER_STRUCTURE,\n    PROTOCOL_NAME,\n    PROTOCOL_VERSION,\n    ZX,\n} from './exchange.order.const';\nimport { EIP712TypedData, MessageTypes } from './model/eip712.model';\nimport {\n    Order,\n    OrderData,\n    OrderHash,\n    OrderSignature,\n    SignedOrder,\n} from './model/order.model';\nimport { SignatureType } from './model/signature-types.model';\nimport { generateOrderSalt } from './utils';\n\nexport class ExchangeOrderBuilder {\n    constructor(\n        private readonly contractAddress: string,\n        private readonly chainId: number,\n        private readonly signer: Wallet | JsonRpcSigner,\n        private readonly generateSalt = generateOrderSalt\n    ) {}\n\n    /**\n     * build an order object including the signature.\n     * @param orderData\n     * @returns a SignedOrder object (order + signature)\n     */\n    async buildSignedOrder(orderData: OrderData): Promise<SignedOrder> {\n        const order = await this.buildOrder(orderData);\n        const orderTypedData = this.buildOrderTypedData(order);\n        const orderSignature = await this.buildOrderSignature(orderTypedData);\n\n        return {\n            ...order,\n            signature: orderSignature,\n        } as SignedOrder;\n    }\n\n    /**\n     * Creates an Order object from order data.\n     * @param OrderData\n     * @returns a Order object (not signed)\n     */\n    async buildOrder({\n        maker,\n        taker,\n        tokenId,\n        makerAmount,\n        takerAmount,\n        side,\n        feeRateBps,\n        nonce,\n        signer,\n        expiration,\n        signatureType,\n    }: OrderData): Promise<Order> {\n        if (typeof signer == 'undefined' || !signer) {\n            signer = maker;\n        }\n\n        const signerAddress = await this.signer.getAddress();\n        if (signer !== signerAddress) {\n            throw new Error('signer does not match');\n        }\n\n        if (typeof expiration == 'undefined' || !expiration) {\n            expiration = '0';\n        }\n\n        if (typeof signatureType == 'undefined' || !signatureType) {\n            // Default to EOA 712 sig type\n            signatureType = SignatureType.EOA;\n        }\n\n        return {\n            salt: this.generateSalt(),\n            maker,\n            signer,\n            taker,\n            tokenId,\n            makerAmount,\n            takerAmount,\n            expiration,\n            nonce,\n            feeRateBps,\n            side,\n            signatureType,\n        };\n    }\n\n    /**\n     * Parses an Order object to EIP712 typed data\n     * @param order\n     * @returns a EIP712TypedData object\n     */\n    buildOrderTypedData(order: Order): EIP712TypedData {\n        return {\n            primaryType: 'Order',\n            types: {\n                EIP712Domain: EIP712_DOMAIN,\n                Order: ORDER_STRUCTURE,\n            },\n            domain: {\n                name: PROTOCOL_NAME,\n                version: PROTOCOL_VERSION,\n                chainId: this.chainId,\n                verifyingContract: this.contractAddress,\n            },\n            message: {\n                salt: order.salt,\n                maker: order.maker,\n                signer: order.signer,\n                taker: order.taker,\n                tokenId: order.tokenId,\n                makerAmount: order.makerAmount,\n                takerAmount: order.takerAmount,\n                expiration: order.expiration,\n                nonce: order.nonce,\n                feeRateBps: order.feeRateBps,\n                side: order.side,\n                signatureType: order.signatureType,\n            },\n        };\n    }\n\n    /**\n     * Generates order's signature from a EIP712TypedData object + the signer address\n     * @param typedData\n     * @returns a OrderSignature that is an string\n     */\n    buildOrderSignature(typedData: EIP712TypedData): Promise<OrderSignature> {\n        delete typedData.types.EIP712Domain;\n        return this.signer._signTypedData(\n            typedData.domain,\n            typedData.types,\n            typedData.message\n        );\n    }\n\n    /**\n     * Generates the hash of the order from a EIP712TypedData object.\n     * @param orderTypedData\n     * @returns a OrderHash that is an string\n     */\n    buildOrderHash(orderTypedData: EIP712TypedData): OrderHash {\n        const message = orderTypedData as unknown as TypedMessage<MessageTypes>;\n\n        return (\n            ZX +\n            TypedDataUtils.eip712Hash(\n                message,\n                SignTypedDataVersion.V4\n            ).toString('hex')\n        );\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"17a1fb245b821db9fd2295e48c66edb51450586c","contentHash":"1ec44ab773faebc70c5688cc6d07d6a84dae7b8cef42cec3c460b7942971bbd9"},"/Users/poly-rodr/projects/clob-order-utils/src/exchange.order.const.ts":{"path":"/Users/poly-rodr/projects/clob-order-utils/src/exchange.order.const.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":197}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":32}},"3":{"start":{"line":5,"column":24},"end":{"line":5,"column":79}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":50}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":31}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":18}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":68}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":46}},"9":{"start":{"line":13,"column":0},"end":{"line":13,"column":47}},"10":{"start":{"line":15,"column":0},"end":{"line":20,"column":2}},"11":{"start":{"line":21,"column":0},"end":{"line":34,"column":2}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/Users/poly-rodr/projects/clob-order-utils/src/exchange.order.const.ts","sources":["/Users/poly-rodr/projects/clob-order-utils/src/exchange.order.const.ts"],"names":[],"mappings":";;;;AACA,gFAAoD;AAEpD,wBAAwB;AACX,QAAA,aAAa,GAAG,yBAAyB,CAAC;AAC1C,QAAA,gBAAgB,GAAG,GAAG,CAAC;AACvB,QAAA,EAAE,GAAG,IAAI,CAAC;AACV,QAAA,YAAY,GAAG,4CAA4C,CAAC;AAC5D,QAAA,mBAAmB,GAAG,eAAe,CAAC;AAEnD,OAAO;AACM,QAAA,YAAY,GAAc,uBAAiB,CAAC;AAEzD,iBAAiB;AACJ,QAAA,aAAa,GAAG;IACzB,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE;IAChC,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,QAAQ,EAAE;IACnC,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE;IACpC,EAAE,IAAI,EAAE,mBAAmB,EAAE,IAAI,EAAE,SAAS,EAAE;CACjD,CAAC;AAEW,QAAA,eAAe,GAAG;IAC3B,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE;IACjC,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE;IAClC,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE;IACnC,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE;IAClC,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE;IACpC,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,SAAS,EAAE;IACxC,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,SAAS,EAAE;IACxC,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,SAAS,EAAE;IACvC,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE;IAClC,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,SAAS,EAAE;IACvC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;IAC/B,EAAE,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,OAAO,EAAE;CAC3C,CAAC","sourcesContent":["import { AbiItem } from './model/abi.model';\nimport ExchangeABISource from './abi/Exchange.json';\n\n// Contract's constants.\nexport const PROTOCOL_NAME = 'Polymarket CTF Exchange';\nexport const PROTOCOL_VERSION = '1';\nexport const ZX = '0x';\nexport const ZERO_ADDRESS = '0x0000000000000000000000000000000000000000';\nexport const CALL_RESULTS_PREFIX = 'CALL_RESULTS_';\n\n// ABIs\nexport const EXCHANGE_ABI: AbiItem[] = ExchangeABISource;\n\n// EIP712 Objects\nexport const EIP712_DOMAIN = [\n    { name: 'name', type: 'string' },\n    { name: 'version', type: 'string' },\n    { name: 'chainId', type: 'uint256' },\n    { name: 'verifyingContract', type: 'address' },\n];\n\nexport const ORDER_STRUCTURE = [\n    { name: 'salt', type: 'uint256' },\n    { name: 'maker', type: 'address' },\n    { name: 'signer', type: 'address' },\n    { name: 'taker', type: 'address' },\n    { name: 'tokenId', type: 'uint256' },\n    { name: 'makerAmount', type: 'uint256' },\n    { name: 'takerAmount', type: 'uint256' },\n    { name: 'expiration', type: 'uint256' },\n    { name: 'nonce', type: 'uint256' },\n    { name: 'feeRateBps', type: 'uint256' },\n    { name: 'side', type: 'uint8' },\n    { name: 'signatureType', type: 'uint8' },\n];\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4ceea289f3abd196e086e3067b66d1b95a21452d","contentHash":"1f062e3e2c0e57463590344c3e4644e7deb234c513ac49910e9ce7f45ce42579"},"/Users/poly-rodr/projects/clob-order-utils/src/model/signature-types.model.ts":{"path":"/Users/poly-rodr/projects/clob-order-utils/src/model/signature-types.model.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":5,"column":0},"end":{"line":18,"column":74}},"3":{"start":{"line":9,"column":4},"end":{"line":9,"column":52}},"4":{"start":{"line":13,"column":4},"end":{"line":13,"column":66}},"5":{"start":{"line":17,"column":4},"end":{"line":17,"column":78}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":26},"end":{"line":18,"column":1}},"line":5}},"branchMap":{"0":{"loc":{"start":{"line":18,"column":19},"end":{"line":18,"column":72}},"type":"binary-expr","locations":[{"start":{"line":18,"column":19},"end":{"line":18,"column":40}},{"start":{"line":18,"column":45},"end":{"line":18,"column":71}}],"line":18}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1},"f":{"0":1},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/poly-rodr/projects/clob-order-utils/src/model/signature-types.model.ts","sources":["/Users/poly-rodr/projects/clob-order-utils/src/model/signature-types.model.ts"],"names":[],"mappings":";;;AAAA,IAAY,aAeX;AAfD,WAAY,aAAa;IACrB;;OAEG;IACH,+CAAG,CAAA;IAEH;;OAEG;IACH,6DAAU,CAAA;IAEV;;OAEG;IACH,yEAAgB,CAAA;AACpB,CAAC,EAfW,aAAa,GAAb,qBAAa,KAAb,qBAAa,QAexB","sourcesContent":["export enum SignatureType {\n    /**\n     * ECDSA EIP712 signatures signed by EOAs\n     */\n    EOA,\n\n    /**\n     * EIP712 signatures signed by EOAs that own Polymarket Proxy wallets\n     */\n    POLY_PROXY,\n\n    /**\n     * EIP712 signatures signed by EOAs that own Polymarket Gnosis safes\n     */\n    POLY_GNOSIS_SAFE,\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"08ccf06138eaa5c3a89850d512246dea8fbcf13e","contentHash":"73f3e6260e8ad358d53743d0998a46f789a24125f06b28a0b9dd6a22d5966091"},"/Users/poly-rodr/projects/clob-order-utils/src/utils.ts":{"path":"/Users/poly-rodr/projects/clob-order-utils/src/utils.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"2":{"start":{"line":5,"column":4},"end":{"line":5,"column":55}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":46}}},"fnMap":{"0":{"name":"generateOrderSalt","decl":{"start":{"line":4,"column":9},"end":{"line":4,"column":26}},"loc":{"start":{"line":4,"column":29},"end":{"line":6,"column":1}},"line":4}},"branchMap":{},"s":{"0":1,"1":1,"2":311,"3":1},"f":{"0":311},"b":{},"inputSourceMap":{"version":3,"file":"/Users/poly-rodr/projects/clob-order-utils/src/utils.ts","sources":["/Users/poly-rodr/projects/clob-order-utils/src/utils.ts"],"names":[],"mappings":";;;AAAA,SAAgB,iBAAiB;IAC7B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;AACvD,CAAC;AAFD,8CAEC","sourcesContent":["export function generateOrderSalt(): string {\n    return Math.round(Math.random() * Date.now()) + '';\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9b603057f475b8f477129b405ace24162472ae4c","contentHash":"73ffe100159ed1fb175d3ff113d03bd29144e0b8e4bd841a9903e8b269f333f9"},"/Users/poly-rodr/projects/clob-order-utils/src/model/order-side.model.ts":{"path":"/Users/poly-rodr/projects/clob-order-utils/src/model/order-side.model.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":22}},"2":{"start":{"line":5,"column":0},"end":{"line":8,"column":47}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":34}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":17},"end":{"line":8,"column":1}},"line":5}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":10},"end":{"line":8,"column":45}},"type":"binary-expr","locations":[{"start":{"line":8,"column":10},"end":{"line":8,"column":22}},{"start":{"line":8,"column":27},"end":{"line":8,"column":44}}],"line":8}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1},"f":{"0":1},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/poly-rodr/projects/clob-order-utils/src/model/order-side.model.ts","sources":["/Users/poly-rodr/projects/clob-order-utils/src/model/order-side.model.ts"],"names":[],"mappings":";;;AAAA,IAAY,IAIX;AAJD,WAAY,IAAI;IACZ,6BAAG,CAAA;IAEH,+BAAI,CAAA;AACR,CAAC,EAJW,IAAI,GAAJ,YAAI,KAAJ,YAAI,QAIf","sourcesContent":["export enum Side {\n    BUY,\n\n    SELL,\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3cba0044f0fb0e8e5ae4c1212c81cce174ce0554","contentHash":"423e78d96411d40ff831e89056d4b77a1f6b0c1d9740a2168c3dccd241d9c130"}}